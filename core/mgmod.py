from build import Function

functions = {
    'get_pos': '(length, rank) result(pos)',
    'write_array': '(vector, length, nx, ny, nz, nh, npx, npy, rank)',
    'set_loc': '(g)',
    'get_rank_at': '(g, i, j) result(rank)',
    'set_neighbours': '(g, nghb)',
    'print_neighbours': '(nghb)',
    'set_buffers': '(halo)',
    'set_requests': '(halo)',
    'set_halo': '(g, grid, halo)',
    'copytobuffer': '(halo, array, nx,ny,nz,nh)',
    'copytoarray': '(halo, array, nx,ny,nz,nh)',
    'check_recv_buffers': '(halo)',
    'check_send_buffers': '(halo)',
    'fill': '(halo, array, nx,ny,nz,nh)',
    'exchange_with_my_neighbours': '(halo)',
    'get_color1d': '(npx, incx, ni) result(color)',
    'get_color2d': '(npx, npy, incx, incy, ni, nj) result(colors)',
    'get_colorpos': '(tile, ni, nj) result(colorpos)',
    'setup_glue': '(tile, nxs, nys, nz, nh, ni, nj) result(infos)',
    'glue': '(big_array, small_array, infos)',
    'split': '(big_array, small_array, infos)',
    'gathersubdomains': '(small_array, infos, n, m, l)',
    'gth': '(big, buffers, nxb, nyb, nxs, nys, nz, nh, ni, nj)',
    'splt': '(big, small, nxb, nyb, nxs, nys, nz, nh, ic, jc)',
    'logprint': '(mg, msg)',
    'frestrict_centers2d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'frestrict_centers3d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'frestrict_vertices2d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'frestrict_vertices3d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'fprolongation_centers2d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'fprolongation_centers3d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'fprolongation_vertices2d': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'fresidual2d': '(x,b,r,msk,diag,nx,ny,nz,nh)',
    'fresidual3d': '(x,b,r,msk,diag,nx,ny,nz,nh)',
    'fsmoother2d': '(x,b,y,idiag,omega,nx,ny,nz,nh)',
    'fsmoother3d': '(x,b,y,idiag,omega,nx,ny,nz,nh)',
    'fnorm2d': '(msk, x, nx,ny,nz,nh) result(sum)',
    'fnorm3d': '(msk, x, nx,ny,nz,nh) result(sum)',
    'fsmoother': '(x,b,y,idiag,omega,nx,ny,nz,nh)',
    'fresidual': '(x,b,r,msk,diag,nx,ny,nz,nh)',
    'frestrict': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'fprolongation': '(xf, xc, coef, nxf,nyf,nzf,nxc,nyc,nzc,nh)',
    'fnorm': '(msk, x, nx,ny,nz,nh) result(sum)',
    'fillmsk': '(mg,lev)',
    'normresidual': '(mg, normb)',
    'norm': '(mg, lev, which)',
    'residual': '(mg, lev)',
    'smooth': '(mg, lev, nite)',
    'restriction': '(mg, lev, which)',
    'prolongation': '(mg, lev)',
    'apply_default_msk': '(mg, lev)',
    'compute_msk': '(mg, lev)',
    'compute_Rcoef': '(mg, lev)',
    'compute_Pcoef': '(mg, lev)',
    'compute_diag': '(mg, lev)',
    'setup_operators': '(mg)',
    'set_shape': '(grid)',
    'allocate_array': '(grid, array)',
    'print_mginfos': '(mg)',
    'setup_mg': '(mg, nx,ny,nz)',
    'allocate_mg': '(mg, h)',
    'set_default_msk': '(mg, is3d)',
    'setup_fine_msk': '(mg)',
    'create_hierarchy': '(h, nx,ny,nz, nh, npx, npy, rank, is3d)',
    'get_ptrmg': '(npx,npy,nx,ny,nz,vertices,short,is3d) result(mg)',
    'get_pyshape': '(mg, lev, gshape)',
    'get_pyarray': '(mg, lev, ivar, n1,n2,n3,x)',
    'set_pyarray': '(mg, lev, ivar, n1,n2,n3,x)',
    'solve': '(mg)',
    'vcycle': '(mg, lev0)',
    'check_l2norms': '(mg, lev)',
    'setup_initial_state': '(mg)',
    'tune': '(mg)',
    'test3d': '()',
    'testmpi': '()',
    'testmpi_v0': '()',
    'testdebug': '()',
    'testsolve': '()',
    'testspeed': '()',
    'testtune': '()'}


def get(name, isfloat32=False):
    if name not in functions:
        print(f"{name} not in {list(functions.keys())}")
        return None
    signature = functions[name]
    return Function('libtests.so', name, signature, isfloat32)
